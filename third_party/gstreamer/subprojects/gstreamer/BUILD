# This is the gstreamer subproject, which containin the main execution runtime
# as well as very basic plugins. For the most part, there is little to no
# media processing.

load("//third_party/gstreamer:tools.bzl", "gen_config_file", "gnome_mkenums_simple", "specialize_file_template")

package(default_visibility = ["//visibility:public"])

licenses(["restricted"])

filegroup(
    name = "headers",
    srcs = [
        "gst/gst.h",
        "libs/gst/base/base.h",
        "libs/gst/base/gstbasesink.h",
        "libs/gst/base/gstpushsrc.h",
        "libs/gst/check/check.h",
        "libs/gst/check/gstcheck.h",
    ],
)

cc_library(
    name = "gst",
    srcs = [
        "gst/glib-compat.c",
        "gst/gst.c",
        "gst/gstallocator.c",
        "gst/gstatomicqueue.c",
        "gst/gstbin.c",
        "gst/gstbuffer.c",
        "gst/gstbufferlist.c",
        "gst/gstbufferpool.c",
        "gst/gstbus.c",
        "gst/gstcaps.c",
        "gst/gstcapsfeatures.c",
        "gst/gstchildproxy.c",
        "gst/gstclock.c",
        "gst/gstcontext.c",
        "gst/gstcontrolbinding.c",
        "gst/gstcontrolsource.c",
        "gst/gstdatetime.c",
        "gst/gstdebugutils.c",
        "gst/gstdevice.c",
        "gst/gstdevicemonitor.c",
        "gst/gstdeviceprovider.c",
        "gst/gstdeviceproviderfactory.c",
        "gst/gstdynamictypefactory.c",
        "gst/gstelement.c",
        "gst/gstelementfactory.c",
        "gst/gsterror.c",
        "gst/gstevent.c",
        "gst/gstformat.c",
        "gst/gstghostpad.c",
        "gst/gstinfo.c",
        "gst/gstiterator.c",
        "gst/gstmemory.c",
        "gst/gstmessage.c",
        "gst/gstmeta.c",
        "gst/gstminiobject.c",
        "gst/gstobject.c",
        "gst/gstpad.c",
        "gst/gstpadtemplate.c",
        "gst/gstparamspecs.c",
        "gst/gstparse.c",
        "gst/gstpipeline.c",
        "gst/gstplugin.c",
        "gst/gstpluginfeature.c",
        "gst/gstpluginloader.c",
        "gst/gstpoll.c",
        "gst/gstpreset.c",
        "gst/gstpromise.c",
        "gst/gstprotection.c",
        "gst/gstquark.c",
        "gst/gstquery.c",
        "gst/gstregistry.c",
        "gst/gstregistrybinary.c",
        "gst/gstregistrychunks.c",
        "gst/gstsample.c",
        "gst/gstsegment.c",
        "gst/gststreamcollection.c",
        "gst/gststreams.c",
        "gst/gststructure.c",
        "gst/gstsystemclock.c",
        "gst/gsttaglist.c",
        "gst/gsttagsetter.c",
        "gst/gsttask.c",
        "gst/gsttaskpool.c",
        "gst/gsttoc.c",
        "gst/gsttocsetter.c",
        "gst/gsttracer.c",
        "gst/gsttracerfactory.c",
        "gst/gsttracerrecord.c",
        "gst/gsttracerutils.c",
        "gst/gsttypefind.c",
        "gst/gsttypefindfactory.c",
        "gst/gsturi.c",
        "gst/gstutils.c",
        "gst/gstvalue.c",
        "gst/parse/grammar.tab.c",
        "gst/parse/lex.priv_gst_parse_yy.c",
        "gst/printf/asnprintf.c",
        "gst/printf/printf.c",
        "gst/printf/printf-args.c",
        "gst/printf/printf-extension.c",
        "gst/printf/printf-parse.c",
        "gst/printf/vasnprintf.c",
    ] + [
        # Generated code.
        "gst/gstenumtypes.c",
    ],
    hdrs = [
        "gst/gettext.h",
        "gst/glib-compat.h",
        "gst/glib-compat-private.h",
        "gst/gst.h",
        "gst/gst-i18n-app.h",
        "gst/gst_private.h",
        "gst/gstallocator.h",
        "gst/gstatomicqueue.h",
        "gst/gstbin.h",
        "gst/gstbuffer.h",
        "gst/gstbufferlist.h",
        "gst/gstbufferpool.h",
        "gst/gstbus.h",
        "gst/gstcaps.h",
        "gst/gstcapsfeatures.h",
        "gst/gstchildproxy.h",
        "gst/gstclock.h",
        "gst/gstcompat.h",
        "gst/gstcontext.h",
        "gst/gstcontrolbinding.h",
        "gst/gstcontrolsource.h",
        "gst/gstdatetime.h",
        "gst/gstdebugutils.h",
        "gst/gstdevice.h",
        "gst/gstdevicemonitor.h",
        "gst/gstdeviceprovider.h",
        "gst/gstdeviceproviderfactory.h",
        "gst/gstdynamictypefactory.h",
        "gst/gstelement.h",
        "gst/gstelementfactory.h",
        "gst/gstelementmetadata.h",
        "gst/gsterror.h",
        "gst/gstevent.h",
        "gst/gstformat.h",
        "gst/gstghostpad.h",
        "gst/gstinfo.h",
        "gst/gstiterator.h",
        "gst/gstmacros.h",
        "gst/gstmemory.h",
        "gst/gstmessage.h",
        "gst/gstmeta.h",
        "gst/gstminiobject.h",
        "gst/gstobject.h",
        "gst/gstpad.h",
        "gst/gstpadtemplate.h",
        "gst/gstparamspecs.h",
        "gst/gstparse.h",
        "gst/gstpipeline.h",
        "gst/gstplugin.h",
        "gst/gstpluginfeature.h",
        "gst/gstpluginloader.h",
        "gst/gstpoll.h",
        "gst/gstpreset.h",
        "gst/gstpromise.h",
        "gst/gstprotection.h",
        "gst/gstquark.h",
        "gst/gstquery.h",
        "gst/gstregistry.h",
        "gst/gstregistrybinary.h",
        "gst/gstregistrychunks.h",
        "gst/gstsample.h",
        "gst/gstsegment.h",
        "gst/gststreamcollection.h",
        "gst/gststreams.h",
        "gst/gststructure.h",
        "gst/gstsystemclock.h",
        "gst/gsttaglist.h",
        "gst/gsttagsetter.h",
        "gst/gsttask.h",
        "gst/gsttaskpool.h",
        "gst/gsttoc.h",
        "gst/gsttocsetter.h",
        "gst/gsttracerfactory.h",
        "gst/gsttracerrecord.h",
        "gst/gsttracerutils.h",
        "gst/gsttypefind.h",
        "gst/gsttypefindfactory.h",
        "gst/gsturi.h",
        "gst/gstutils.h",
        "gst/gstvalue.h",
        "gst/math-compat.h",
        "gst/printf/gst-printf.h",
        "gst/printf/printf.h",
        "gst/printf/printf-args.h",
        "gst/printf/printf-extension.h",
        "gst/printf/printf-parse.h",
        "gst/printf/vasnprintf.h",
    ] + [
        # Generated code.
        "config.h",
        "gst/gstconfig.h",
        "gst/gstversion.h",
        "gst/gstenumtypes.h",
    ],
    copts = [
        "-w",
        "-DHAVE_CONFIG_H",
        "-DGST_DISABLE_DEPRECATED",
        "-D_GNU_SOURCE",
        "-DG_LOG_DOMAIN=\\\"GStreamer\\\"",
    ],
    linkopts = [
        "-ldl",
    ],
    textual_hdrs = [
        "gst/parse/types.h",
        "gst/gst-i18n-lib.h",
        "gst/gsttracer.h",
        "gst/parse/grammar.tab.h",
        "gst/parse/parse_lex.h",
    ],
    deps = [
        "//third_party/glib/glib",
        "//third_party/glib/gmodule",
        "//third_party/glib/gobject",
    ],
)

gen_config_file(
    name = "gen_config",
    out = "config.h",
    defs = {
        "GETTEXT_PACKAGE": '"gstreamer-1.0"',
        "GSTCONFIG_BUILT_WITH_MSVC": "0",
        "GST_API_EXPORT": 'extern __attribute__ ((visibility ("default")))',
        "GST_API_VERSION": '"1.0"',
        "GST_DATADIR": '"/usr/local/share"',
        "GST_ENABLE_EXTRA_CHECKS": "",
        "GST_LEVEL_DEFAULT": "GST_LEVEL_ERROR",
        "GST_LICENSE": '"LGPL"',
        "GST_PACKAGE_NAME": '"GStreamer git"',
        "GST_PACKAGE_ORIGIN": '"Unknown package origin"',
        "GST_PLUGIN_SCANNER_INSTALLED": '"/usr/local/libexec/gstreamer-1.0/gst-plugin-scanner"',
        "GST_PLUGIN_SCANNER_SUBDIR": '"libexec"',
        "GST_PLUGIN_SUBDIR": '"lib/x86_64-linux-gnu"',
        "GST_PTP_HELPER_INSTALLED": '"/usr/local/libexec/gstreamer-1.0/gst-ptp-helper"',
        "HAVE_ALARM": "1",
        "HAVE_BACKTRACE": "1",
        "HAVE_CLOCK_GETTIME": "1",
        "HAVE_CLOCK_NANOSLEEP": "1",
        "HAVE_CPU_X86_64": "1",
        "HAVE_DECL_LOCALTIME_R": "1",
        "HAVE_DECL_STRDUP": "1",
        "HAVE_DECL_STRSIGNAL": "1",
        "HAVE_DLADDR": "",
        "HAVE_DLFCN_H": "1",
        "HAVE_FORK": "1",
        "HAVE_FSEEKO": "1",
        "HAVE_FTELLO": "1",
        "HAVE_FUTEX": "1",
        "HAVE_GETLINE": "1",
        "HAVE_GETPAGESIZE": "1",
        "HAVE_GETPID": "1",
        "HAVE_GETRUSAGE": "1",
        "HAVE_GETTIMEOFDAY": "1",
        "HAVE_GMTIME_R": "1",
        "HAVE_INTTYPES_H": "1",
        "HAVE_LOCALTIME_R": "1",
        "HAVE_LONG_LONG": "1",
        "HAVE_MEMORY_H": "1",
        "HAVE_MKSTEMP": "1",
        "HAVE_MONOTONIC_CLOCK": "1",
        "HAVE_POLL": "1",
        "HAVE_POLL_H": "1",
        "HAVE_POSIX_TIMERS": "1",
        "HAVE_PPOLL": "1",
        "HAVE_PSELECT": "1",
        "HAVE_PTHREAD_CONDATTR_SETCLOCK": "1",
        "HAVE_PTP": "1",
        "HAVE_PTP_HELPER_SETUID": "1",
        "HAVE_SIGACTION": "1",
        "HAVE_SIOCGIFCONF_SIOCGIFFLAGS_SIOCGIFHWADDR": "1",
        "HAVE_STDINT_H": "1",
        "HAVE_STDIO_EXT_H": "1",
        "HAVE_STRINGS_H": "1",
        "HAVE_STRING_H": "1",
        "HAVE_STRNLEN": "1",
        "HAVE_SYS_PARAM_H": "1",
        "HAVE_SYS_POLL_H": "1",
        "HAVE_SYS_PRCTL_H": "1",
        "HAVE_SYS_RESOURCE_H": "1",
        "HAVE_SYS_SOCKET_H": "1",
        "HAVE_SYS_STAT_H": "1",
        "HAVE_SYS_TIMES_H": "1",
        "HAVE_SYS_TIME_H": "1",
        "HAVE_SYS_TYPES_H": "1",
        "HAVE_SYS_UIO_H": "1",
        "HAVE_SYS_UTSNAME_H": "1",
        "HAVE_SYS_WAIT_H": "1",
        "HAVE_TM_GMTOFF": "1",
        "HAVE_UCONTEXT_H": "1",
        "HAVE_UINT128_T": "1",
        "HAVE_UNISTD_H": "1",
        "LIBDIR": '"/usr/local/lib/x86_64-linux-gnu"',
        "LOCALEDIR": '"/usr/local/share/locale"',
        "MEMORY_ALIGNMENT_MALLOC": 1,
        "PACKAGE": '"gstreamer"',
        "PACKAGE_BUGREPORT": '"https://gitlab.freedesktop.org/gstreamer/gstreamer/issues/new"',
        "PACKAGE_NAME": '"GStreamer"',
        "PACKAGE_STRING": '"GStreamer 1.19.3.1"',
        "PACKAGE_TARNAME": '"gstreamer"',
        "PACKAGE_URL": '""',
        "PACKAGE_VERSION": '"1.19.3.1"',
        "PLUGINDIR": '"/usr/local/lib/x86_64-linux-gnu/gstreamer-1.0"',
        "TARGET_CPU": '"x86_64"',
        "VERSION": '"1.19.3.1"',
    },
    undefs = [
        "GST_DISABLE_OPTION_PARSING",
        "HAVE_GMP",
        "HAVE_GSL",
        "USE_POISONING",
    ],
)

specialize_file_template(
    name = "gen_gstconfig",
    src = "gst/gstconfig.h.in",
    out = "gst/gstconfig.h",
    replacements = {
        "@GST_DISABLE_GST_DEBUG_DEFINE@": "#undef GST_DISABLE_GST_DEBUG",
        "@GST_DISABLE_PARSE_DEFINE@": "#undef GST_DISABLE_PARSE",
        "@GST_DISABLE_REGISTRY_DEFINE@": "#undef GST_DISABLE_REGISTRY",
        "@GST_DISABLE_CAST_CHECKS_DEFINE@": "1",
        "@GST_DISABLE_GLIB_ASSERTS_DEFINE@": "0",
        "@GST_DISABLE_GLIB_CHECKS_DEFINE@": "0",
        "@GST_DISABLE_PLUGIN_DEFINE@": "#undef GST_DISABLE_PLUGIN",
        "@GSTCONFIG_BUILT_WITH_MSVC@": "0",
    },
)

specialize_file_template(
    name = "gen_gstversion",
    src = "gst/gstversion.h.in",
    out = "gst/gstversion.h",
    replacements = {
        "@GST_VERSION_MAJOR@": "1",
        "@GST_VERSION_MINOR@": "19",
        "@GST_VERSION_MICRO@": "3",
        "@GST_VERSION_NANO@": "1",
    },
)

GST_HEADERS_NEEDING_ENUM_SUPPORT = [
    "gst/gst.h",
    "gst/glib-compat.h",
    "gst/gstobject.h",
    "gst/gstallocator.h",
    "gst/gstbin.h",
    "gst/gstbuffer.h",
    "gst/gstbufferlist.h",
    "gst/gstbufferpool.h",
    "gst/gstbus.h",
    "gst/gstcaps.h",
    "gst/gstcapsfeatures.h",
    "gst/gstchildproxy.h",
    "gst/gstclock.h",
    "gst/gstcompat.h",
    "gst/gstcontext.h",
    "gst/gstcontrolbinding.h",
    "gst/gstcontrolsource.h",
    "gst/gstdatetime.h",
    "gst/gstdebugutils.h",
    "gst/gstelement.h",
    "gst/gstelementmetadata.h",
    "gst/gsterror.h",
    "gst/gstdevice.h",
    "gst/gstdeviceprovider.h",
    "gst/gstdeviceproviderfactory.h",
    "gst/gstdynamictypefactory.h",
    "gst/gstelementfactory.h",
    "gst/gstevent.h",
    "gst/gstformat.h",
    "gst/gstghostpad.h",
    "gst/gstdevicemonitor.h",
    "gst/gstinfo.h",
    "gst/gstiterator.h",
    "gst/gstatomicqueue.h",
    "gst/gstmacros.h",
    "gst/gstmessage.h",
    "gst/gstmeta.h",
    "gst/gstmemory.h",
    "gst/gstminiobject.h",
    "gst/gstpad.h",
    "gst/gstpadtemplate.h",
    "gst/gstparamspecs.h",
    "gst/gstpipeline.h",
    "gst/gstplugin.h",
    "gst/gstpluginfeature.h",
    "gst/gstpoll.h",
    "gst/gstpreset.h",
    "gst/gstprotection.h",
    "gst/gstquery.h",
    "gst/gstpromise.h",
    "gst/gstsample.h",
    "gst/gstsegment.h",
    "gst/gststreamcollection.h",
    "gst/gststreams.h",
    "gst/gststructure.h",
    "gst/gstsystemclock.h",
    "gst/gsttaglist.h",
    "gst/gsttagsetter.h",
    "gst/gsttask.h",
    "gst/gsttaskpool.h",
    "gst/gsttoc.h",
    "gst/gsttocsetter.h",
    "gst/gsttracer.h",
    "gst/gsttracerfactory.h",
    "gst/gsttracerrecord.h",
    "gst/gsttypefind.h",
    "gst/gsttypefindfactory.h",
    "gst/gsturi.h",
    "gst/gstutils.h",
    "gst/gstvalue.h",
    "gst/gstregistry.h",
    "gst/gstparse.h",
    "gst/math-compat.h",
]

gnome_mkenums_simple(
    name = "gstenumtypes",
    body_prefix = '#include "third_party/gstreamer/subprojects/gstreamer/gst/gst_private.h"\n#include "third_party/gstreamer/subprojects/gstreamer/gst/gst.h"',
    decorator = "GST_API",
    hdr_out = "gst/gstenumtypes.h",
    header_prefix = '#include "third_party/gstreamer/subprojects/gstreamer/gst/gstconfig.h"',
    sources = GST_HEADERS_NEEDING_ENUM_SUPPORT,
    src_out = "gst/gstenumtypes.c",
)

_PARSE_SNIPPET = '#ifdef HAVE_CONFIG_H\\n#include "third_party\\/gstreamer\\/subprojects\\/gstreamer\\/config.h"\\n#endif\\n'

genrule(
    name = "flex_lexer",
    srcs = [
        "gst/parse/parse.l",
        "gst/parse/grammar.tab.h",
    ],
    outs = [
        "gst/parse/lex.priv_gst_parse_yy.c.pristine",
        "gst/parse/parse_lex.h",
    ],
    cmd = (
        "flex --header-file=$(location gst/parse/parse_lex.h) " +
        " -Ppriv_gst_parse_yy -o $(location gst/parse/lex.priv_gst_parse_yy.c.pristine) $(SRCS) && " +
        "mv $(location gst/parse/lex.priv_gst_parse_yy.c.pristine) $(location gst/parse/lex.priv_gst_parse_yy.c.pristine)_tmp && " +
        'echo "#ifdef HAVE_CONFIG_H" > $(location gst/parse/lex.priv_gst_parse_yy.c.pristine) && ' +
        'echo "#endif" >> $(location gst/parse/lex.priv_gst_parse_yy.c.pristine) && ' +
        "{ grep -q priv_gst_parse_yyget_column $(location gst/parse/parse_lex.h) || " +
        "{ echo 'int priv_gst_parse_yyget_column  (void * yyscanner);' >> $(location gst/parse/lex.priv_gst_parse_yy.c.pristine) && " +
        "echo 'void priv_gst_parse_yyset_column (int column_no , void * yyscanner);' >> $(location gst/parse/lex.priv_gst_parse_yy.c.pristine); }; } && " +
        "cat $(location gst/parse/lex.priv_gst_parse_yy.c.pristine)_tmp >> $(location gst/parse/lex.priv_gst_parse_yy.c.pristine)"
    ),
)

genrule(
    name = "parse_lex",
    srcs = ["gst/parse/lex.priv_gst_parse_yy.c.pristine"],
    outs = ["gst/parse/lex.priv_gst_parse_yy.c"],
    cmd = "sed 1s/^/'{}'/ $< > $@".format(_PARSE_SNIPPET),
)

specialize_file_template(
    name = "gen_grammar",
    src = "gst/parse/grammar.y.in",
    out = "gst/parse/grammar.y",
    replacements = {
        "@BISON_PURE_PARSER@": "%define api.pure full",
    },
)

genrule(
    name = "bison_parser",
    srcs = ["gst/parse/grammar.y"],
    outs = [
        "gst/parse/grammar.tab.c",
        "gst/parse/grammar.tab.h",
    ],
    cmd = (
        "bison -d -v -ppriv_gst_parse_yy $< " +
        "-o $(location gst/parse/grammar.tab.c) && " +
        "mv $(location gst/parse/grammar.tab.c) $(location gst/parse/grammar.tab.c)_tmp && " +
        'echo "#ifdef HAVE_CONFIG_H" > $(location gst/parse/grammar.tab.c) && ' +
        'echo "#endif" >> $(location gst/parse/grammar.tab.c) && ' +
        "cat $(location gst/parse/grammar.tab.c)_tmp >> $(location gst/parse/grammar.tab.c)"
    ),
)

cc_library(
    name = "base",
    srcs = [
        "libs/gst/base/gstadapter.c",
        "libs/gst/base/gstaggregator.c",
        "libs/gst/base/gstbaseparse.c",
        "libs/gst/base/gstbasesink.c",
        "libs/gst/base/gstbasesrc.c",
        "libs/gst/base/gstbasetransform.c",
        "libs/gst/base/gstbitreader.c",
        "libs/gst/base/gstbitwriter.c",
        "libs/gst/base/gstbytereader.c",
        "libs/gst/base/gstbytewriter.c",
        "libs/gst/base/gstcollectpads.c",
        "libs/gst/base/gstdataqueue.c",
        "libs/gst/base/gstflowcombiner.c",
        "libs/gst/base/gstpushsrc.c",
        "libs/gst/base/gstqueuearray.c",
        "libs/gst/base/gsttypefindhelper.c",
    ],
    hdrs = [
        "libs/gst/base/base.h",
        "libs/gst/base/base-prelude.h",
        "libs/gst/base/gstadapter.h",
        "libs/gst/base/gstaggregator.h",
        "libs/gst/base/gstbaseparse.h",
        "libs/gst/base/gstbasesink.h",
        "libs/gst/base/gstbasesrc.h",
        "libs/gst/base/gstbasetransform.h",
        "libs/gst/base/gstbitreader.h",
        "libs/gst/base/gstbitwriter.h",
        "libs/gst/base/gstbytereader.h",
        "libs/gst/base/gstbytewriter.h",
        "libs/gst/base/gstcollectpads.h",
        "libs/gst/base/gstdataqueue.h",
        "libs/gst/base/gstflowcombiner.h",
        "libs/gst/base/gstindex.h",
        "libs/gst/base/gstpushsrc.h",
        "libs/gst/base/gstqueuearray.h",
        "libs/gst/base/gsttypefindhelper.h",
    ],
    copts = [
        "-DHAVE_CONFIG_H",
    ],
    textual_hdrs = [
        "libs/gst/base/gstindex.c",
        "libs/gst/base/gstmemindex.c",
    ],
    deps = [
        ":gst",
        "//third_party/glib/glib",
    ],
)

gnome_mkenums_simple(
    name = "controller-enumtypes",
    body_prefix = '#include "third_party/gstreamer/subprojects/gstreamer/gst/gstconfig.h"',
    hdr_out = "libs/gst/controller/controller-enumtypes.h",
    header_prefix = '#include "third_party/gstreamer/subprojects/gstreamer/libs/gst/controller/controller-prelude.h"',
    sources = [
        "libs/gst/controller/gstinterpolationcontrolsource.h",
        "libs/gst/controller/gstlfocontrolsource.h",
    ],
    src_out = "libs/gst/controller/controller-enumtypes.c",
)

cc_library(
    name = "controller",
    srcs = [
        "libs/gst/controller/controller-enumtypes.c",
        "libs/gst/controller/gstargbcontrolbinding.c",
        "libs/gst/controller/gstdirectcontrolbinding.c",
        "libs/gst/controller/gstinterpolationcontrolsource.c",
        "libs/gst/controller/gstlfocontrolsource.c",
        "libs/gst/controller/gstproxycontrolbinding.c",
        "libs/gst/controller/gsttimedvaluecontrolsource.c",
        "libs/gst/controller/gsttriggercontrolsource.c",
    ],
    hdrs = [
        "libs/gst/controller/controller.h",
        "libs/gst/controller/controller-enumtypes.h",
        "libs/gst/controller/controller-prelude.h",
        "libs/gst/controller/gstargbcontrolbinding.h",
        "libs/gst/controller/gstdirectcontrolbinding.h",
        "libs/gst/controller/gstinterpolationcontrolsource.h",
        "libs/gst/controller/gstlfocontrolsource.h",
        "libs/gst/controller/gstproxycontrolbinding.h",
        "libs/gst/controller/gsttimedvaluecontrolsource.h",
        "libs/gst/controller/gsttriggercontrolsource.h",
    ],
    copts = [
        "-DHAVE_CONFIG_H",
    ],
    deps = [
        ":gst",
        "//third_party/glib/glib",
        "//third_party/glib/gobject",
    ],
)

cc_library(
    name = "net",
    srcs = [
        "libs/gst/net/gstnetaddressmeta.c",
        "libs/gst/net/gstnetclientclock.c",
        "libs/gst/net/gstnetcontrolmessagemeta.c",
        "libs/gst/net/gstnettimepacket.c",
        "libs/gst/net/gstnettimeprovider.c",
        "libs/gst/net/gstnetutils.c",
        "libs/gst/net/gstntppacket.c",
        "libs/gst/net/gstptpclock.c",
    ],
    hdrs = [
        "libs/gst/net/gstnet.h",
        "libs/gst/net/gstnetaddressmeta.h",
        "libs/gst/net/gstnetclientclock.h",
        "libs/gst/net/gstnetcontrolmessagemeta.h",
        "libs/gst/net/gstnettimepacket.h",
        "libs/gst/net/gstnettimeprovider.h",
        "libs/gst/net/gstnetutils.h",
        "libs/gst/net/gstntppacket.h",
        "libs/gst/net/gstptp_private.h",
        "libs/gst/net/gstptpclock.h",
        "libs/gst/net/net.h",
        "libs/gst/net/net-prelude.h",
    ],
    copts = [
        "-DHAVE_CONFIG_H",
    ],
    deps = [
        ":base",
        ":gst",
        "//third_party/glib/gio",
        "//third_party/glib/glib",
    ],
)

cc_library(
    name = "plugins",
    srcs = [
        "plugins/elements/gstcapsfilter.c",
        "plugins/elements/gstclocksync.c",
        "plugins/elements/gstconcat.c",
        "plugins/elements/gstcoreelementsplugin.c",
        "plugins/elements/gstdataurisrc.c",
        "plugins/elements/gstdownloadbuffer.c",
        "plugins/elements/gstelements_private.c",
        "plugins/elements/gstfakesink.c",
        "plugins/elements/gstfakesrc.c",
        "plugins/elements/gstfdsink.c",
        "plugins/elements/gstfdsrc.c",
        "plugins/elements/gstfilesink.c",
        "plugins/elements/gstfilesrc.c",
        "plugins/elements/gstfunnel.c",
        "plugins/elements/gstidentity.c",
        "plugins/elements/gstinputselector.c",
        "plugins/elements/gstmultiqueue.c",
        "plugins/elements/gstoutputselector.c",
        "plugins/elements/gstqueue.c",
        "plugins/elements/gstqueue2.c",
        "plugins/elements/gstsparsefile.c",
        "plugins/elements/gststreamiddemux.c",
        "plugins/elements/gsttee.c",
        "plugins/elements/gsttypefindelement.c",
        "plugins/elements/gstvalve.c",
    ],
    copts = [
        "-w",
        "-DHAVE_CONFIG_H",
    ],
    textual_hdrs = [
        "plugins/elements/gstcapsfilter.h",
        "plugins/elements/gstclocksync.h",
        "plugins/elements/gstconcat.h",
        "plugins/elements/gstcoreelementselements.h",
        "plugins/elements/gstdataurisrc.h",
        "plugins/elements/gstdownloadbuffer.h",
        "plugins/elements/gstelements_private.h",
        "plugins/elements/gstfakesink.h",
        "plugins/elements/gstfakesrc.h",
        "plugins/elements/gstfdsink.h",
        "plugins/elements/gstfdsrc.h",
        "plugins/elements/gstfilesink.h",
        "plugins/elements/gstfilesrc.h",
        "plugins/elements/gstfunnel.h",
        "plugins/elements/gstidentity.h",
        "plugins/elements/gstinputselector.h",
        "plugins/elements/gstmultiqueue.h",
        "plugins/elements/gstoutputselector.h",
        "plugins/elements/gstqueue.h",
        "plugins/elements/gstqueue2.h",
        "plugins/elements/gstsparsefile.h",
        "plugins/elements/gststreamiddemux.h",
        "plugins/elements/gsttee.h",
        "plugins/elements/gsttypefindelement.h",
        "plugins/elements/gstvalve.h",
    ],
    deps = [
        ":base",
        ":gst",
        "//third_party/glib/glib",
    ],
)

LIBCHECK_CHECK_H_REPLACEMENTS = {
    "@ENABLE_SUBUNIT@": "0",
    "@CHECK_MAJOR_VERSION@": "0",
    "@CHECK_MINOR_VERSION@": "9",
    "@CHECK_MICRO_VERSION@": "14",
    "@HAVE_FORK@": "1",
}

specialize_file_template(
    name = "gen_internal_check",
    src = "libs/gst/check/libcheck/check.h.in",
    out = "libs/gst/check/internal-check.h",
    replacements = LIBCHECK_CHECK_H_REPLACEMENTS,
)

specialize_file_template(
    name = "gen_libcheck_check",
    src = "libs/gst/check/libcheck/check.h.in",
    out = "libs/gst/check/libcheck/check.h",
    replacements = LIBCHECK_CHECK_H_REPLACEMENTS,
)

cc_library(
    name = "check",
    srcs = [
        "libs/gst/check/gstbufferstraw.c",
        "libs/gst/check/gstcheck.c",
        "libs/gst/check/gstconsistencychecker.c",
        "libs/gst/check/gstharness.c",
        "libs/gst/check/gsttestclock.c",
        "libs/gst/check/libcheck/check.c",
        "libs/gst/check/libcheck/check_error.c",
        "libs/gst/check/libcheck/check_list.c",
        "libs/gst/check/libcheck/check_log.c",
        "libs/gst/check/libcheck/check_msg.c",
        "libs/gst/check/libcheck/check_pack.c",
        "libs/gst/check/libcheck/check_print.c",
        "libs/gst/check/libcheck/check_run.c",
        "libs/gst/check/libcheck/check_str.c",
    ],
    copts = [
        "-DHAVE_CONFIG_H",
    ],
    linkopts = [
        "-lrt",
    ],
    textual_hdrs = [
        "libs/gst/check/internal-check.h",
        "libs/gst/check/check.h",
        "libs/gst/check/check-prelude.h",
        "libs/gst/check/gstbufferstraw.h",
        "libs/gst/check/gstcheck.h",
        "libs/gst/check/gstconsistencychecker.h",
        "libs/gst/check/gstharness.h",
        "libs/gst/check/gsttestclock.h",
        "libs/gst/check/libcheck/check_error.h",
        "libs/gst/check/libcheck/check.h",
        "libs/gst/check/libcheck/check_impl.h",
        "libs/gst/check/libcheck/check_list.h",
        "libs/gst/check/libcheck/check_log.h",
        "libs/gst/check/libcheck/check_msg.h",
        "libs/gst/check/libcheck/check_pack.h",
        "libs/gst/check/libcheck/check_print.h",
        "libs/gst/check/libcheck/check_str.h",
        "libs/gst/check/libcheck/libcompat/libcompat.h",
    ],
    deps = [
        ":gst",
        ":plugins",
        "//third_party/glib/glib",
        "@com_google_absl//absl/base:dynamic_annotations",
    ],
)

# -------------------------------------------------------------------
# Unit tests

# Unit tests under test/checks/gst to run.
#
# TODO(b/217748524): Tests that are ignored for now:
# "gstindex"
# "gstutils"
GSTREAMER_CHECK_GST_TESTS = [
    "gstbufferpool",
    "gstchildproxy",
    "gstdeinit",
    "gstghostpad",
    "gstmessage",
    "gstparamspecs",
    "gstprintf",
    "gstsegment",
    "gsttagsetter",
    "gsturi",
    "gstatomicqueue",
    "gstbus",
    "gstclock",
    "gstdevice",
    "gstmeta",
    "gstpipeline",
    "gstpromise",
    "gststream",
    "gsttask",
    "gstbin",
    "gst",
    "gstcontext",
    "gstelement",
    "gstinfo",
    "gstminiobject",
    "gstplugin",
    "gstprotection",
    "gststructure",
    "gsttoc",
    "gstvalue",
    "gstbuffer",
    "gstcontroller",
    "gstelementfactory",
    "gstiterator",
    "gstobject",
    "gstpoll",
    "gstquery",
    "gsttocsetter",
    "gstbufferlist",
    "gstcapsfeatures",
    "gstdatetime",
    "gstevent",
    "gstmemory",
    "gstpad",
    "gstpreset",
    "gstregistry",
    "gsttag",
    "gsttracerrecord",
]

[cc_test(
    name = "gst_{}".format(function),
    srcs = ["tests/check/gst/{}.c".format(function)],
    copts = [
        "-w",
        "-Wno-implicit-function-declaration",
        "-DHAVE_CONFIG_H",
    ],
    deps = [
        ":base",
        ":check",
        ":gst",
        ":plugins",
        "//third_party/glib/glib",
    ],
) for function in GSTREAMER_CHECK_GST_TESTS]

cc_test(
    name = "gst_gstcaps",
    srcs = [
        "tests/check/gst/capslist.h",
        "tests/check/gst/gstcaps.c",
    ],
    copts = [
        "-w",
        "-Wno-implicit-function-declaration",
        "-DHAVE_CONFIG_H",
    ],
    deps = [
        ":check",
        ":gst",
        "//third_party/glib/glib",
    ],
)

cc_test(
    name = "gst_gstsystemclock",
    srcs = ["tests/check/gst/gstsystemclock.c"],
    copts = [
        "-w",
        "-Wno-implicit-function-declaration",
        "-DHAVE_CONFIG_H",
    ],
    env = {
        "CK_DEFAULT_TIMEOUT": "600",
    },
    deps = [
        ":base",
        ":check",
        ":gst",
        ":plugins",
        "//third_party/glib/glib",
    ],
)

# Unit tests under tests/check/libs to run.
#
# TODO(b/217748524): Tests that are ignored for now:
# "gstnetclientclock",
# "gstnettimeprovider",
# "bitreader-noinline",
# "libsabi",
# "sparsefile",
# "bytereader-noinline",
# "bytewriter-noinline",
# "test_transform",
# "transform1",
# "transform2",
GSTREAMER_CHECK_LIBS_TESTS = [
    "adapter",
    "controller",
    "aggregator",
    "flowcombiner",
    "baseparse",
    "gstharness",
    "basesink",
    "basesrc",
    "bitreader",
    "gsttestclock",
    "bitwriter",
    "queuearray",
    "bytereader",
    "bytewriter",
    "collectpads",
    "typefindhelper",
]

[cc_test(
    name = "gst_{}".format(function),
    srcs = ["tests/check/libs/{}.c".format(function)],
    copts = [
        "-w",
        "-Wno-implicit-function-declaration",
        "-DHAVE_CONFIG_H",
    ],
    deps = [
        ":base",
        ":check",
        ":controller",
        ":gst",
        ":net",
        ":plugins",
        "//third_party/glib/glib",
    ],
) for function in GSTREAMER_CHECK_LIBS_TESTS]

# Unit tests under tests/check/elements to run.
#
# TODO(b/217748524): Tests that are ignored for now:
# "dataurisrc"
# "fdsrc"
# "filesrc"
# "leaks"
GSTREAMER_CHECK_ELEMENTS_TESTS = [
    "capsfilter",
    "funnel",
    "multiqueue",
    "selector",
    "valve",
    "clocksync",
    "fakesink",
    "filesink",
    "identity",
    "queue2",
    "streamiddemux",
    "concat",
    "fakesrc",
    "queue",
    "tee",
]

[cc_test(
    name = "gst_{}".format(function),
    srcs = ["tests/check/elements/{}.c".format(function)],
    copts = [
        "-w",
        "-Wno-implicit-function-declaration",
        "-DHAVE_CONFIG_H",
    ],
    deps = [
        ":base",
        ":check",
        ":gst",
        ":plugins",
        "//third_party/glib/glib",
    ],
) for function in GSTREAMER_CHECK_ELEMENTS_TESTS]
